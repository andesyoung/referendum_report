{"version":3,"sources":["Menu.js","Map.js","App.js","serviceWorker.js","index.js"],"names":["_","window","Title","styled","div","_templateObject","Button","button","_templateObject2","TextButton","_templateObject3","menu","state","onClick","idx","_this","props","_this2","this","title","react_default","a","createElement","map","key","concat","React","Component","defaultProps","identity","d3","Map_templateObject","Toolbar","Map_templateObject2","AwardBoard","Map_templateObject3","Board","_templateObject4","Legend","_templateObject5","draw","results","color","context","select","node","getContext","projection","geoMercator","center","scale","translate","geoGenerator","geoPath","data","mapValues","mapKeys","features","forEach","path","i","_path$properties","properties","COUNTYNAME","TOWNNAME","fillStyle","beginPath","fill","format","sortBy","filter","values","value","Number","replace","_ref","resultRights","ready","onYesClick","setState","take","takeRight","scaleLinear","domain","max","range","onNoClick","onDiffClick","json","_this$state","Map_Title","id","width","height","length","_ref2","_ref3","Document","App_templateObject","Head","App_templateObject2","App_templateObject3","Tip","App_templateObject4","onChangeCase","_callee","regenerator_default","wrap","_context","prev","next","abrupt","csv","sent","columns","stop","App_Title","href","Menu_default","Map_default","Boolean","location","hostname","match","ReactDOM","render","App_default","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.544213cb.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport window from 'global/window';\n\nconst { _ } = window;\n\nconst Title = styled.div`\n  font-size: 1em;\n  position: relative;\n  padding-left: 15px;\n  color: #202020;\n  margin-bottom: 5px;\n\n  &:before {\n    content: \"\";\n    background: #000;\n    display: block;\n    width: 8px;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  background: #F4F4F4;\n  border: 1px solid #939393;\n  padding: 10px;\n  font-size: 1em;\n  text-align: left;\n  cursor: pointer;\n  margin: 2px 0;\n  outline: none !important;\n  color: #202020;\n\n  &:hover {\n    background-color: #939393;\n    color: #F4F4F4;\n  }\n`;\n\nconst TextButton = styled.button`\n  background: transparent;\n  border: none;\n  padding: 0;\n  font-size: 1em;\n  text-align: left;\n  cursor: pointer;\n  margin: 0 2px;\n  outline: none !important;\n  color: #202020;\n  text-decoration: underline;\n`;\n\nconst menu = [\n  '第7案：你是否同意以「平均每年至少降低1%」之方式逐年降低火力發電廠發電量？',\n  '第8案：您是否同意確立「停止新建、擴建任何燃煤發電廠或發電機組（包括深澳電廠擴建）」之能源政策？',\n  '第9案：你是否同意政府維持禁止開放日本福島311核災相關地區，包括福島與周遭4縣市（茨城、櫪木、群馬、千葉）等地區農產品及食品進口？',\n  '第10案：你是否同意民法婚姻規定應限定在一男一女的結合?',\n  '第11案：你是否同意在國民教育階段內（國中及國小），教育部及各級學校不應對學生實施性別平等教育法施行細則所定之同志教育？',\n  '第12案：你是否同意以民法婚姻規定以外之其他形式來保障同性別二人經營永久共同生活的權益？',\n  '第13案：你是否同意，以「台灣」（Taiwan）為全名申請參加所有國際運動賽事及2020年東京奧運？',\n  '第14案：您是否同意，以民法婚姻章保障同性別二人建立婚姻關係？',\n  '第15案：您是否同意，以「性別平等教育法」明定在國民教育各階段內實施性別平等教育，且內容應涵蓋情感教育、性教育、同志教育等課程？',\n  '第16案：您是否同意：廢除電業法第95條第1項，即廢除「核能發電設備應於中華民國一百十四年以前，全部停止運轉」之條文？',\n];\n\nexport default class extends React.Component {\n  static defaultProps = {\n    title: null,\n    onClick: _.identity,\n  }\n\n  state = {\n\n  }\n\n  onClick = (idx) => this.props.onClick(menu[idx], idx);\n\n  render() {\n    const { title } = this.props;\n\n    if (title) {\n      return (\n        <div>\n          <Title>{title}<TextButton onClick={() => this.onClick(-1)}>更換公投案</TextButton></Title>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <Title>步驟一：請選擇想要了解的公投案</Title>\n        <div>\n          {_.map(menu, (title, idx) => (\n            <Button key={`t${idx}`} onClick={() => this.onClick(idx)}>{title}</Button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport window from 'global/window';\n\nconst { _, d3 } = window;\n\nconst Title = styled.div`\n  font-size: 1em;\n  position: relative;\n  padding-left: 15px;\n  color: #202020;\n  margin-bottom: 5px;\n\n  &:before {\n    content: \"\";\n    background: #000;\n    display: block;\n    width: 8px;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n`;\n\nconst Toolbar = styled.div`\n  display: flex;\n\n  & button {\n    background: transparent;\n    padding: 2px 10px;\n    margin: 0px 2px;\n    outline: none !important;\n    cursor: pointer;\n  }\n`;\n\nconst AwardBoard = styled.div`\n  display: flex;\n  margin-bttom: 20px;\n  justify-content: space-around;\n`;\n\nconst Board = styled.div`\n  width: 240px;\n`;\n\nconst Legend = styled.div`\n`;\n\nconst draw = (results, color) => {\n  const { map } = window;\n\tconst context = d3.select(\"#map\").node().getContext(\"2d\");\n\tconst projection = d3.geoMercator().center([121,23,5]).scale(8000).translate([500,400]);\n  const geoGenerator = d3.geoPath().projection(projection).context(context);\n  const data = _.mapValues(_.mapKeys(results, 'key'), 'value');\n\n  map.features.forEach(function(path, i) {\n    const { properties: { COUNTYNAME, TOWNNAME } } = path;\n    context.fillStyle = color(data[`${COUNTYNAME}${TOWNNAME}`] || 0);\n    context.beginPath();\n    geoGenerator(path);\n    context.fill();\n  });\n}\n\nconst format = (data, key) => {\n  return _.sortBy(_.map(_.filter(data, '地區'), (values) => ({\n    key: `${values['縣市']}${values['地區']}`,\n    value: Number(values[key].replace('%', '')),\n  })), ({ value }) => (100 - value));\n}\n\nexport default class extends React.Component {\n  static defaultProps = {\n    data: [],\n  }\n\n  state = {\n    results: [],\n    resultRights: [],\n    ready: false,\n  }\n\n  async componentDidMount() {\n    if (!window.map) window.map = await d3.json('./taiwan.json');\n    this.setState({ ready: true });\n  }\n\n  onYesClick = () => {\n    const { data } = this.props;\n    const results = format(data, '有效同意票數對投票權人數百分比(%)');\n    this.setState({\n      results: _.take(results, 10),\n      resultRights: _.takeRight(results, 10),\n    }, () => {\n      draw(results, d3.scaleLinear().domain([0,_.max(_.map(results, 'value'))]).range([\"#FFFFFF\",\"#73B07B\"]));\n    });\n  }\n\n  onNoClick = () => {\n    const { data } = this.props;\n    const results = format(data, '有效不同意票數對投票權人數百分比(%)');\n    this.setState({\n      results: _.take(results, 10),\n      resultRights: _.takeRight(results, 10),\n    }, () => {\n      draw(results, d3.scaleLinear().domain([0,_.max(_.map(results, 'value'))]).range([\"#FFFFFF\",\"#E78B93\"]));\n    });\n  }\n\n  onDiffClick = () => {\n    const { data } = this.props;\n    const results = format(data, '有效同意與不同意票數對投票權人數百分比(%)差值');\n    this.setState({\n      results: _.take(results, 10),\n      resultRights: _.takeRight(results, 10),\n    }, () => {\n      draw(results, d3.scaleLinear().domain([20, -20]).range([\"#3A8441\",\"#DC3280\"]));\n    });\n  }\n\n  render() {\n    const { results, resultRights, ready } = this.state;\n\n    if (!ready) return (<Title>地圖載入中，請稍候...</Title>);\n\n    return (\n      <div>\n        <Title>步驟二：請選擇要查看 同意票 或 不同意票</Title>\n        <Toolbar>\n          <button onClick={this.onYesClick}>同意票</button>\n          <button onClick={this.onNoClick}>不同意票</button>\n          <button onClick={this.onDiffClick}>同意與不同意差值</button>\n        </Toolbar>\n        <canvas id=\"map\" width=\"960\" height=\"600\" />\n        {results.length >0 && (\n          <AwardBoard>\n            <Board>\n              <Legend>前 10 名排序</Legend>\n              <div>\n                {_.map(results, ({key, value}) => (<div key={key}>{key} {value}</div>))}\n              </div>\n            </Board>\n            <Board>\n              <Legend>後 10 名排序</Legend>\n              <div>\n                {_.map(resultRights, ({key, value}) => (<div key={key}>{key} {value}</div>))}\n              </div>\n            </Board>\n          </AwardBoard>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport window from 'global/window';\nimport Menu from './Menu';\nimport Map from './Map';\n\nconst { d3 } = window;\n\nconst Document = styled.div`;\n  width: 100%;\n  max-width: 768px;\n  margin: 0 auto;\n`;\n\nconst Head = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  position: relative;\n  height: 40px;\n`;\n\nconst Title = styled.div`\n  width: 100%;\n  font-size: 1.5em;\n  position: absolute;\n  left: 0;\n  top: 0;\n`;\n\nconst Tip = styled.div`\n  font-size: 0.5em;\n  margin: 0 0 0 3px;\n\n  & a {\n    color: #202020;\n  }\n`;\n\nexport default class extends Component {\n  state = {\n    title: '',\n    data: [],\n  }\n\n  onChangeCase = async (title, idx) => {\n    if (idx < 0) {\n      this.setState({ title, data: [] });\n      return;\n    }\n\n    const data = await d3.csv(`./data/${idx+7}.csv`);\n    delete data.columns;\n    this.setState({ title, data });\n  }\n\n  render() {\n    const { title, data } = this.state;\n\n    return (\n      <Document>\n        <Head>\n          <Title>2018 公投結果資料視覺化</Title>\n          <Tip>專案：<a href=\"https://g0v.tw/\">零時政府 g0v.tw</a> 協作</Tip>\n          <Tip>資料來源：<a href=\"http://referendum.2018.nat.gov.tw/pc/zh_TW/00/00000000000000000.html\">中選會</a></Tip>\n        </Head>\n        <Menu title={title} onClick={this.onChangeCase} />\n        {data.length > 0 && <Map data={data} onClick={() => {}} />}\n      </Document>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}